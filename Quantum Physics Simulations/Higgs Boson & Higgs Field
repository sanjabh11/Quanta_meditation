<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Higgs Boson & Higgs Field Visualization</title>
    <style>
        body, html {
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
            overflow: hidden;
        }
        .container {
            display: flex;
            flex-direction: column;
            height: 100vh;
        }
        #visualization {
            flex-grow: 1;
            position: relative;
        }
        #sidebar {
            position: absolute;
            top: 10px;
            left: 10px;
            z-index: 10;
            background: rgba(0, 0, 0, 0.7);
            color: white;
            padding: 10px;
            border-radius: 5px;
            max-width: 300px;
            max-height: 80vh;
            overflow-y: auto;
        }
        #toggle-explanation {
            position: fixed;
            top: 10px;
            left: 10px;
            z-index: 20;
        }
        #explanation {
            display: none;
        }
        #controls {
            position: fixed;
            bottom: 10px;
            left: 50%;
            transform: translateX(-50%);
            display: flex;
            justify-content: center;
            z-index: 10;
        }
        button {
            margin: 0 5px;
            padding: 5px 10px;
            background: #4CAF50;
            color: white;
            border: none;
            border-radius: 3px;
            cursor: pointer;
        }
        .formula {
            font-style: italic;
            text-align: center;
        }
    </style>
</head>
<body>
<div class="container">
    <button id="toggle-explanation">Toggle Explanation</button>
    <div id="sidebar">
        <h2>Higgs Boson &amp; Higgs Field</h2>
        <div id="explanation">
            <p>The Higgs field is an invisible energy field that permeates all of space. The Higgs boson is the particle associated with this field.</p>
            <p><strong>Key Concepts:</strong></p>
            <ul>
                <li>The Higgs field gives mass to fundamental particles.</li>
                <li>Particles interact differently with the Higgs field, resulting in different masses.</li>
                <li>The Higgs boson is an excitation of the Higgs field.</li>
            </ul>
            <p><strong>In the Animation:</strong></p>
            <ul>
                <li>The grid represents the Higgs field.</li>
                <li>Colored particles represent different fundamental particles.</li>
                <li>Larger particles have more mass and interact more strongly with the field.</li>
                <li>The wavy motion of the field represents quantum fluctuations.</li>
                <li>Higgs bosons appear as temporary bright spots in the field.</li>
            </ul>
            <p class="formula">E² = (pc)² + (mc²)²</p>
            <p>This formula relates a particle's energy (E), momentum (p), and mass (m), showing how mass contributes to a particle's total energy.</p>
        </div>
    </div>
    <div id="visualization"></div>
    <div id="controls">
        <button id="add-particle">Add Particle</button>
        <button id="toggle-field">Toggle Higgs Field</button>
        <button id="create-boson">Create Higgs Boson</button>
        <button id="reset">Reset</button>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.js"></script>
<script>
let particles = [];
let showField = true;
let fieldStrength = 0.05;
let fieldPoints = [];
let higgsBoson = null;
let particleTypes = [
    { name: "Electron", mass: 1, color: [173, 216, 230] },
    { name: "Muon", mass: 3, color: [255, 192, 203] },
    { name: "Top Quark", mass: 10, color: [255, 165, 0] }
];

function setup() {
    let canvas = createCanvas(windowWidth, windowHeight);
    canvas.parent('visualization');
    initFieldPoints();
    reset();
}

function draw() {
    background(30);
    
    if (showField) {
        drawHiggsField();
    }
    
    particles.forEach(particle => {
        particle.update();
        particle.display();
    });

    if (higgsBoson) {
        higgsBoson.update();
        higgsBoson.display();
        if (higgsBoson.lifetime <= 0) {
            higgsBoson = null;
        }
    }
}

function initFieldPoints() {
    fieldPoints = [];
    let res = 30;
    for (let x = 0; x < width; x += res) {
        for (let y = 0; y < height; y += res) {
            fieldPoints.push({
                x: x,
                y: y,
                angle: 0
            });
        }
    }
}

function drawHiggsField() {
    stroke(100, 100, 255, 50);
    strokeWeight(2);
    fieldPoints.forEach(point => {
        point.angle = noise(point.x * 0.005, point.y * 0.005, frameCount * 0.02) * TWO_PI;
        push();
        translate(point.x, point.y);
        rotate(point.angle);
        line(0, 0, 20, 0);
        pop();
    });
}

class Particle {
    constructor(x, y, type) {
        this.pos = createVector(x, y);
        this.vel = p5.Vector.random2D().mult(2);
        this.acc = createVector();
        this.type = type;
        this.size = map(type.mass, 1, 10, 15, 40);
        this.color = color(type.color);
    }

    update() {
        if (showField) {
            let angle = noise(this.pos.x * 0.005, this.pos.y * 0.005, frameCount * 0.02) * TWO_PI;
            let force = p5.Vector.fromAngle(angle);
            force.mult(fieldStrength * this.type.mass);
            this.acc.add(force);
        }
        
        this.vel.add(this.acc);
        this.vel.limit(5);
        this.pos.add(this.vel);
        this.acc.mult(0);
        
        this.pos.x = (this.pos.x + width) % width;
        this.pos.y = (this.pos.y + height) % height;
    }

    display() {
        noStroke();
        fill(this.color);
        ellipse(this.pos.x, this.pos.y, this.size);
        
        fill(255);
        textAlign(CENTER, CENTER);
        textSize(12);
        text(this.type.name, this.pos.x, this.pos.y + this.size/2 + 15);
    }
}

class HiggsBoson {
    constructor(x, y) {
        this.pos = createVector(x, y);
        this.lifetime = 120;
        this.size = 60;
    }

    update() {
        this.lifetime--;
    }

    display() {
        noStroke();
        let alpha = map(this.lifetime, 120, 0, 255, 0);
        fill(255, 215, 0, alpha);
        ellipse(this.pos.x, this.pos.y, this.size);
        
        for (let i = 0; i < 12; i++) {
            let angle = i * PI / 6;
            let x = this.pos.x + cos(angle) * this.size * 0.8;
            let y = this.pos.y + sin(angle) * this.size * 0.8;
            stroke(255, 215, 0, alpha / 2);
            strokeWeight(3);
            line(this.pos.x, this.pos.y, x, y);
        }

        noStroke();
        fill(255, alpha);
        textAlign(CENTER, CENTER);
        textSize(14);
        text("Higgs Boson", this.pos.x, this.pos.y + this.size/2 + 20);
    }
}

function reset() {
    particles = [];
    for (let i = 0; i < 8; i++) {
        addParticle();
    }
    higgsBoson = null;
}

function addParticle() {
    let x = random(width);
    let y = random(height);
    let type = random(particleTypes);
    particles.push(new Particle(x, y, type));
}

function createHiggsBoson() {
    higgsBoson = new HiggsBoson(random(width), random(height));
}

function windowResized() {
    resizeCanvas(windowWidth, windowHeight);
    initFieldPoints();
}

document.getElementById('add-particle').addEventListener('click', addParticle);
document.getElementById('toggle-field').addEventListener('click', () => showField = !showField);
document.getElementById('create-boson').addEventListener('click', createHiggsBoson);
document.getElementById('reset').addEventListener('click', reset);
document.getElementById('toggle-explanation').addEventListener('click', function() {
    let explanation = document.getElementById('explanation');
    explanation.style.display = explanation.style.display === 'none' ? 'block' : 'none';
});
</script>
</body>
</html>
